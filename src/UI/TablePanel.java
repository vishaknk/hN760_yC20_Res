/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Services.TableService;
import Utility.ButtonColumn;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import model.TableModel;

/**
 *
 * @author priyesh
 */
public class TablePanel extends javax.swing.JPanel {

    /**
     * Creates new form TablePanel
     */
    public TablePanel() {
        initComponents();
        getAllTables();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        addTable = new javax.swing.JButton();
        tableName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        seatNumber = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Create Table", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 13), new java.awt.Color(102, 102, 102))); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(1260, 615));

        jLabel2.setText("Table Name");

        addTable.setBackground(new java.awt.Color(0, 153, 255));
        addTable.setForeground(new java.awt.Color(255, 255, 255));
        addTable.setText("Create Table");
        addTable.setName("LoginBtn"); // NOI18N
        addTable.setPreferredSize(new java.awt.Dimension(160, 29));
        addTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTableActionPerformed(evt);
            }
        });

        tableName.setToolTipText("Table Name");

        jLabel3.setText("No of Seats");

        seatNumber.setToolTipText("Table Name");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Sl. No.", "Table Name", "No. of Seats", "Status", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tableName, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 324, Short.MAX_VALUE))
                            .addComponent(seatNumber)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(addTable, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tableName, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seatNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addTable, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1317, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTableActionPerformed
        // TODO add your handling code here:
        // validation for empty
        if (tableName.getText().toString().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter some table name.", "ERROR", 0);
            return;
        }
        TableModel tableModel = new TableModel();
        tableModel.setTable_name(tableName.getText().toString());

        TableService tableModelService = new TableService();
        int response;
        if (addTable.getText().contains("Update")) {
            tableModel.setTable_id(tableModelId);
            response = tableModelService.saveOrUpdateTabledetails(tableModel, false);
        } else {
            response = tableModelService.saveOrUpdateTabledetails(tableModel, true);
        }
        clearAll();
        if (response == 1) {
            getAllTables();
            JOptionPane.showMessageDialog(null, "Table " + tableModel.getTable_name() + " has been updated successfully", "Success", 1);
        } else {
            JOptionPane.showMessageDialog(null, "Invalid", "ERROR", 0);

        }

    }//GEN-LAST:event_addTableActionPerformed
    private void clearAll() {
        tableName.setText("");
        seatNumber.setText("");
        addTable.setText("Create");
    }

    private int tableModelId;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addTable;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField seatNumber;
    private javax.swing.JTable table;
    private javax.swing.JTextField tableName;
    // End of variables declaration//GEN-END:variables

    private void getAllTables() {
        TableService tableService = new TableService();
        List<TableModel> shopList = tableService.getAllTables();

        String data[][] = new String[shopList.size()][6];
        for (int i = 0; i < shopList.size(); i++) {
            data[i][0] = new Integer(i + 1).toString();
            data[i][1] = shopList.get(i).getTable_name();
            data[i][2] = new Integer(shopList.get(i).getNo_of_seat()).toString();
            data[i][3] = shopList.get(i).getStatus() == 1 ? "Active" : "Inactive";
            data[i][4] = "Update";
            data[i][5] = "Delete";
        }
        String columnNames[] = new String[]{"Sl.No.", "Table Name", "No of Seats", "Status", "", ""};
        DefaultTableModel tbl = new DefaultTableModel(data, columnNames);
        table.setModel(tbl);

        Action update = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JTable table = (JTable) e.getSource();
                int modelRow = Integer.valueOf(e.getActionCommand());
                String idValString = (String) ((DefaultTableModel) table.getModel()).getValueAt(modelRow, 0);
                int idVal = Integer.parseInt(idValString);
                editField(shopList.get(idVal - 1));
            }

            private void editField(TableModel staffModel) {
                tableModelId = staffModel.getTable_id();
                TableService tableService = new TableService();
                tableName.setText(staffModel.getTable_name());
                seatNumber.setText(String.valueOf(staffModel.getNo_of_seat()));
                addTable.setText("Update");
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        };

        Action delete = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JTable table = (JTable) e.getSource();
                int modelRow = Integer.valueOf(e.getActionCommand());
                String id = (String) ((DefaultTableModel) table.getModel()).getValueAt(modelRow, 0);
                int shopId = shopList.get(Integer.parseInt(id) - 1).getTable_id();

                int dialogResult = JOptionPane.showConfirmDialog(null, "Confirm Deletion ?", "Warning", JOptionPane.YES_NO_OPTION);
                int status = 0;
                if (dialogResult == JOptionPane.YES_OPTION) {
                    status = tableService.deleteTable(shopId);
                }

                if (status == 1) {
                    clearAll();
                    getAllTables();
                }

            }
        };

        Action updatecustomer = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JTable table = (JTable) e.getSource();
                int modelRow = Integer.valueOf(e.getActionCommand());
                String idValString = (String) ((DefaultTableModel) table.getModel()).getValueAt(modelRow, 0);
                int idVal = Integer.parseInt(idValString);
                TableModel tableModel = new TableModel();
                tableModel.setTable_id(idVal);
                tableModel = tableService.gettableModelById(tableModel.getTable_id());

//                Utility.visiblePanel.setVisible(false);
//                Utility.ticketForm = new TicketForm();
//                Utility.ticketForm.fillInCustomerDetails(customer);
//                 Utility.visiblePanel=Utility.ticketForm;
//                Utility.visiblePanel.setVisible(true);
//                Utility.skelitionForm.add(Utility.visiblePanel);
            }
        };

        ButtonColumn buttonColumnEdit = new ButtonColumn(table, update, 4);
        buttonColumnEdit.setMnemonic(KeyEvent.VK_D);
        ButtonColumn buttonColumnDelete = new ButtonColumn(table, delete, 5);
        buttonColumnDelete.setMnemonic(KeyEvent.VK_D);
    }
}
