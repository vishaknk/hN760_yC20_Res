/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Utility.ProductButton;
import java.awt.GridLayout;
import java.util.ArrayList;
import javax.swing.JPanel;
import model.ItemModel;
import model.OrderItemModel;
import Interface.CategoryListener;
import Interface.ProductListener;

/**
 *
 * @author Visak
 */
public class CategoryItem extends javax.swing.JFrame {

    private ArrayList<ItemModel> foodCategoryType;
    private CategoryListener listener;
    
    public CategoryItem(){
        initComponents();
    }
    /**
     * Creates new form CategoryItem
     */
    public CategoryItem(int id) {
        initComponents();
        //Model class to store the item data
        foodCategoryType = new ArrayList<>();
        setCategoryItems(id);
    }
    
    public void setCategoryItems (int id){
        foodCategoryType.clear();
         switch (id) {
            case 0:
                //Adding category items
                for (int index = 0; index < 50; index++) {
                    ItemModel model = new ItemModel();
                    model.setId(index);
                    model.setImage("");
                    model.setName("Test" + index);
                    foodCategoryType.add(model);
                }
                break;
            case 1:
                //Adding category items
                for (int index = 0; index < 5; index++) {
                    ItemModel model = new ItemModel();
                    model.setId(index);
                    model.setImage("");
                    model.setName("Test" + index);
                    foodCategoryType.add(model);
                }
                break;
            case 2:
                //Adding category items
                for (int index = 0; index < 4; index++) {
                    ItemModel model = new ItemModel();
                    model.setId(index);
                    model.setImage("");
                    model.setName("Test" + index);
                    foodCategoryType.add(model);
                }
                break;
            case 3:
                //Adding category items
                for (int index = 0; index < 3; index++) {
                    ItemModel model = new ItemModel();
                    model.setId(index);
                    model.setImage("");
                    model.setName("Test" + index);
                    foodCategoryType.add(model);
                }
                break;
            case 4:
                //Adding category items
                for (int index = 0; index < 2; index++) {
                    ItemModel model = new ItemModel();
                    model.setId(index);
                    model.setImage("");
                    model.setName("Test" + index);
                    foodCategoryType.add(model);
                }
                break;
        }

        JPanel contentOrderItem = new JPanel();
        contentOrderItem.setLayout(new GridLayout(0, 4));
        ProductButton buttonOrderItem[] = new ProductButton[100];

        for (int index = 0; index < foodCategoryType.size(); index++) {
            buttonOrderItem[index] = new ProductButton(foodCategoryType.get(index), id, CategoryListener.CATEGORY);
            buttonOrderItem[index].addProductListener(new CategoryListener() {
                @Override
                public void clickedCategory(int index, ItemModel model) {
                    listener.clickedCategory(index, model);
                    hide();
                }

                @Override
                public void clickedProducts(int index, OrderItemModel model) {
                }
            });
            contentOrderItem.add(buttonOrderItem[index]);
        }
        sp_category_item.getViewport().setView(contentOrderItem);
    }
    
    public void setListener(CategoryListener listener){
        this.listener = listener;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sp_category_item = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        sp_category_item.setBorder(null);
        sp_category_item.setPreferredSize(new java.awt.Dimension(500, 400));
        sp_category_item.setSize(new java.awt.Dimension(500, 400));
        getContentPane().add(sp_category_item);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CategoryItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CategoryItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CategoryItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CategoryItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CategoryItem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane sp_category_item;
    // End of variables declaration//GEN-END:variables
}
